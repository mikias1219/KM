
NAME:   MIKIAS ABATE 
ID:     UGR/4491/13
SECTION  :  C





1. Program to Compute Integers Greater Than or Equal to 10 in an Array

#include <iostream>
using namespace std;

int main() {
    const int SIZE = 10;
    int arr[SIZE];
    int count = 0;

    cout << "Enter 10 integers:" << endl;
    for (int i = 0; i < SIZE; i++) {
        cin >> arr[i];
        if (arr[i] >= 10) {
            count++;
        }
    }

    cout << "Number of integers greater than or equal to 10: " << count << endl;

    return 0;
}

2. Program to Define and Print Book Information Using Structures


#include <iostream>
#include <string>
using namespace std;

struct Book {
    string title;
    string author;
    string subject;
    int bookId;
};

int main() {
    Book book1 = {"Book Title 1", "Author 1", "Subject 1", 12345};
    Book book2 = {"Book Title 2", "Author 2", "Subject 2", 67890};

    cout << "Book 1 Information:" << endl;
    cout << "Title: " << book1.title << endl;
    cout << "Author: " << book1.author << endl;
    cout << "Subject: " << book1.subject << endl;
    cout << "Book ID: " << book1.bookId << endl << endl;

    cout << "Book 2 Information:" << endl;
    cout << "Title: " << book2.title << endl;
    cout << "Author: " << book2.author << endl;
    cout << "Subject: " << book2.subject << endl;
    cout << "Book ID: " << book2.bookId << endl;

    return 0;
}


 3. Program to Append Two Arrays and Display the Result


#include <iostream>
using namespace std;

int main() {
    int a[4] = {1, 2, 3, 4};
    int b[4] = {5, 6, 7, 8};
    int c[8];

    for (int i = 0; i < 4; i++) {
        c[i] = a[i];
        c[i + 4] = b[i];
    }

    cout << "Array C after appending arrays A and B:" << endl;
    for (int i = 0; i < 8; i++) {
        cout << c[i] << " ";
    }
    cout << endl;

    return 0;
}


 4. Program to Display a Calculator Menu and Perform Operations


#include <iostream>
using namespace std;

int main() {
    int choice, a, b;

    cout << "Calculator Menu:" << endl;
    cout << "1. Addition" << endl;
    cout << "2. Subtraction" << endl;
    cout << "3. Multiplication" << endl;
    cout << "4. Division" << endl;
    cout << "5. Modulus" << endl;
    cout << "Choose an operation (1-5): ";
    cin >> choice;

    cout << "Enter two integers: ";
    cin >> a >> b;

    switch(choice) {
        case 1:
            cout << "Result: " << a + b << endl;
            break;
        case 2:
            cout << "Result: " << a - b << endl;
            break;
        case 3:
            cout << "Result: " << a * b << endl;
            break;
        case 4:
            if (b != 0) {
                cout << "Result: " << a / b << endl;
            } else {
                cout << "Cannot divide by zero." << endl;
            }
            break;
        case 5:
            cout << "Result: " << a % b << endl;
            break;
        default:
            cout << "Invalid choice." << endl;
    }

    return 0;
}



MENU 
1. Add 
2. Subtract 
3. Multiply 
4. Divide 
5. Modulus 
Enter your choice: 1 
Enter your two numbers: 12 15 
Result: 27 
Continue? Y
The program also asks the user to decide whether he/she wants to continue the operation. 
If he/she input ‘y’, the program will prompt the user to choose the operation gain. Otherwise, the program will terminate.





5. Program to find the smallest and largest of three integers:


#include <iostream>
using namespace std;

int main() {
    int num1, num2, num3;
    cout << "Enter three integers: ";
    cin >> num1 >> num2 >> num3;

    int smallest = num1 < num2 ? (num1 < num3 ? num1 : num3) : (num2 < num3 ? num2 : num3);
    int largest = num1 > num2 ? (num1 > num3 ? num1 : num3) : (num2 > num3 ? num2 : num3);

    cout << "Smallest: " << smallest << endl;
    cout << "Largest: " << largest << endl;

    return 0;
}




6. Program to find the average age of a person:


#include <iostream>
using namespace std;

double calculateAverage(int ages[], int size) {
    double sum = 0.0;
    for (int i = 0; i < size; i++) {
        sum += ages[i];
    }
    return sum / size;
}

int main() {
    int ages[] = {23, 45, 34, 56, 27}; // Sample array of ages
    int size = sizeof(ages) / sizeof(ages[0]);

    double average = calculateAverage(ages, size);
    cout << "Average age: " << average << endl;

    return 0;
}




7. Program to insert a number at a given index in an array and move elements:

#include <iostream>
using namespace std;

void insertAndShift(int arr[], int size, int index, int number) {
    if (index >= size) {
        cout << "Index out of bounds!" << endl;
        return;
    }

    for (int i = size - 1; i > index; i--) {
        arr[i] = arr[i - 1];
    }

    arr[index] = number;
}

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6};
    int size = sizeof(arr) / sizeof(arr[0]);

    int index, number;
    cout << "Enter index and number to insert: ";
    cin >> index >> number;

    insertAndShift(arr, size, index, number);

    cout << "Array after insertion:" << endl;
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    return 0;
}




8. Program to display a value using a pointer:

#include <iostream>
using namespace std;

int main() {
    int value;
    cout << "Enter a value: ";
    cin >> value;

    int* ptr = &value;
    cout << "Value using pointer: " << *ptr << endl;

    return 0;
}


9. Program to assign values to integer pointers:


#include <iostream>
using namespace std;

int main() {
    int a, b;
    cout << "Enter two integers: ";
    cin >> a >> b;

    int *ptrA = &a, *ptrB = &b;
    cout << "Value of ptrA: " << *ptrA << endl;
    cout << "Value of ptrB: " << *ptrB << endl;

    return 0;
}


10. Program to print array elements in reverse order using a pointer:


#include <iostream>
using namespace std;

int main() {
    int arr[5];
    cout << "Enter five integers: ";
    for (int i = 0; i < 5; i++) {
        cin >> arr[i];
    }

    int* ptr = arr + 4;
    cout << "Array elements in reverse order:" << endl;
    for (int i = 0; i < 5; i++) {
        cout << *ptr << " ";
        ptr--;
    }
    cout << endl;

    return 0;
}


11. Function to count even numbers in an array:


#include <iostream>
using namespace std;

int countEven(int* arr, int size) {
    int count = 0;
    for (int i = 0; i < size; i++) {
        if (arr[i] % 2 == 0) {
            count++;
        }
    }
    return count;
}

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6};
    int size = sizeof(arr) / sizeof(arr[0]);

    cout << "Number of even numbers: " << countEven(arr, size) << endl;

    return 0;
}


12. Functions to cube a number using pointer:


#include <iostream>
using namespace std;

void cubeByPtr1(int* numPtr) {
    *numPtr = (*numPtr) * (*numPtr) * (*numPtr);
}

void cubeByPtr2(int& numPtr) {
    numPtr = numPtr * numPtr * numPtr;
}

int main() {
    int num = 3;
    cout << "Original value: " << num << endl;

    cubeByPtr1(&num);
    cout << "Value after cubeByPtr1: " << num << endl;

    cubeByPtr2(num);
    cout << "Value after cubeByPtr2: " << num << endl;

    return 0;
}



13. Program to manipulate a string using a pointer:


#include <iostream>
using namespace std;

int main() {
    char str[] = "A string.";
    char* ptr = str;

    cout << *ptr << " " << ptr << " " << *(ptr + 8) << endl;

    ptr += 2;
    cout << ptr << " " << *(ptr + 2) << " " << *(ptr + 5) << endl;

    return 0;
}
